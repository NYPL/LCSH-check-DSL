#!/usr/local/bin/lispscript
; vi: ft=lisp


« (DEFVAR *INPUT-FILE* Ø (CADR (CMDARGS)))
    OR DIE "NO INPUT FILE SUPPLIED" »

(DEFVAR *CHECKS* NIL)

(DEFCLASS LCSH-CHECK ()
  ((DOC :INITARG :DOC)))

(DEFCLASS REGEX-CHECK (LCSH-CHECK)
  ((REGEX        :INITARG :REGEX)
   (COMP-REGEX   :INITARG :COMP-REGEX)))

(DEFMACRO DEFINE-REGEX-RULE (SYM REGEX DOC)
  `(PROGN (PUSH (MAKE-INSTANCE 'REGEX-CHECK
                               :REGEX ,REGEX :COMP-REGEX (RE-COMPILE ,REGEX)
                               :DOC ,DOC) *CHECKS*)))

(DEFINE-CONDITION BAD-HEADER (ERROR)
  ((TEXT :INITARG :TEXT :READER TEXT)))

(DEFINE-CONDITION REGEX-RULE-FAILURE (BAD-HEADER)
  ((TEXT :INITARG :TEXT :READER TEXT)
   (LINE :INITARG :LINE :READER LINE)))

(DEFMETHOD CHECK-VIOLATION ((ACHECK REGEX-CHECK) AHEADER)
  (~M AHEADER { ACHECK 'COMP-REGEX }))

(DEFMETHOD SHOW-ERROR ((ANERROR BAD-HEADER))
  (FT "~40S~A~%" (LINE ANERROR) (RED •violates rule "~A"• (TEXT ANERROR))))



(LOAD "rules.lisp")


(FOR-EACH-LINE *INPUT-FILE*
  (LET ((THIS-LINE        VALUE!))
    (FOR-EACH-LIST *CHECKS*
      (WHEN (> INDEX! 10) (BREAK!))
      (HANDLER-CASE
        (PROGN
          (WHEN (CHECK-VIOLATION VALUE! THIS-LINE)
            (ERROR 'REGEX-RULE-FAILURE
                   :TEXT (FN "~A: M/~A/" { VALUE! 'DOC } { VALUE! 'REGEX })
                   :LINE THIS-LINE)
            (FT "passed!~%")))
        (BAD-HEADER (ERROR!) (SHOW-ERROR ERROR!))))))



; vi: ft=lisp
